name: Build

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - develop
  workflow_dispatch:

jobs:
  build:
    needs: [lint, test]
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20.x'

      - name: Install dependencies
        run: npm install

      - name: Build
        run: npm run build

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: built-artifact
          path: dist
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker image
        run: docker build -t ${{ secrets.DOCKER_USERNAME }}/tracking-service:latest .

      - name: Push Docker image
        run: docker push ${{ secrets.DOCKER_USERNAME }}/tracking-service:latest

  lint:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20.x'

      - name: Install dependencies
        run: npm install

      - name: Eslint
        run: npm run lint

  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20.x'

      - name: Install dependencies
        run: npm install

      - name: Test
        run: npm test

  deploy:
    needs: [build]
    runs-on: ubuntu-latest

    steps:

    - name: Set short git commit SHA
      id: commit
      uses: prompt/actions-commit-hash@v2

    - name: Check out code
      uses: actions/checkout@v2

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Update kube config
      run: aws eks update-kubeconfig --name Kubernetes-ad --region us-east-1

    - name: Deploy app to EKS
      run: |
        sed -i.bak "s|DOCKER_IMAGE|${{ secrets.DOCKER_USERNAME }}/tracking-service:latest|g" tracking-service.yaml && \
        kubectl apply -f tracking-service.yaml
        kubectl apply -f tracking-service-dev.yaml
        kubectl apply -f tracking-service-configmap.yaml

    - name: Deploy mongo to EKS
      run: |
        sed -i.bak "s|DOCKER_IMAGE|mongodb:latest|g" mongo-service.yaml && \
        kubectl apply -f mongodb-service.yaml
